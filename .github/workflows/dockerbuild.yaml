# This is a basic workflow to help you get started with Actions

name: build docker images

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches:
     - master
    paths:
      - '**/Dockerfile'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  docker_build_push:
    name: docker build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Log into registry
        run: echo "${{ secrets.HUB_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY_URL }} -u ${{ secrets.DOCKERHUB_USER }} --password-stdin

      - name: Build and push the images
        run: |
          for dockerFilePath in $(git diff-tree --no-commit-id -r ${{ github.event.before }} ${{ github.sha }} | awk '{if($5 != "D") print($6)}' | grep "Dockerfile");
          do
            IMAGE_NAME=${dockerFilePath%"/Dockerfile"}
            IMAGE_ID=${{ secrets.DOCKER_REGISTRY_URL }}/${{ secrets.REPOSITORY }}/$IMAGE_NAME
            tmpName="image-$RANDOM"
            docker build $IMAGE_NAME --file $dockerFilePath --tag $tmpName
            IMAGE_VERSION=$(grep "LABEL VERSION" $dockerFilePath | awk 'BEGIN{FS="\="}{print($2)}')
            echo "IMAGE_NAME=$IMAGE_NAME"
            echo "IMAGE_VERSION=$IMAGE_VERSION"
            docker tag $tmpName $IMAGE_ID:$IMAGE_VERSION
            docker push $IMAGE_ID:$IMAGE_VERSION
          done;
